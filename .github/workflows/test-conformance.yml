on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test-conformance:
    runs-on: ubuntu-latest
    env:
      DOCKER_BUILDKIT: 1
      COMPOSE_DOCKER_CLI_BUILD: 1

    steps:

    - uses: actions/checkout@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Login to DockerHub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Build Django image
      uses: docker/build-push-action@v2
      with:
        context: .
        file: docker/django/Dockerfile
        push: true
        pull: true
        cache-from: type=registry,ref=opengisch/signalo-django:latest
        cache-to: type=registry,ref=opengisch/signalo-django:latest,mode=max
        tags: opengisch/signalo-django:latest

    - name: Setup Compose application
      run: |
        # copy default conf
        cp .env.example .env

        # start the stack
        docker compose \
          -f docker-compose.yml \
          -f docker-compose.override.yml \
          -f docker-compose.tests.yml \
          up postgres django conformance_suite --build -d

        # deploy static files and migrate database
        docker compose exec django python manage.py collectstatic --no-input
        docker compose exec django python manage.py migrate --no-input

        # sprinkle some test data (refreshing computed fields is done from the command handler)
        docker compose exec django python manage.py init --data

        # run conformance test
        docker compose \
          -f docker-compose.yml \
          -f docker-compose.override.yml \
          -f docker-compose.tests.yml \
          run test_client

    - name: Failure logs
      if: failure()
      run: docker-compose logs
